openapi: "3.0.0"

info:
  title: Assignment task
  version: "1.0"
servers:
  - url: http://0.0.0.0:5000

paths:
  /analytics:
    get:
      summary: Get analytics
      description: Get analytics
      operationId: app.views.analytics
      parameters:
        - $ref: '#/components/parameters/date_from'
        - $ref: '#/components/parameters/date_to'
      responses:
        '200':
          description: Empty
        '400':
          description: Empty

  /posts/{post_id}:
    get:
      summary: Display post
      description: Display post
      operationId: app.views.retrieve_post
      parameters:
        - $ref: '#/components/parameters/post_id'
      responses:
        '200':
          $ref: '#/components/responses/single_post'
  /posts:
    get:
      summary: Display all posts
      description: Display all posts
      operationId: app.views.retrieve_all_posts
      responses:
        '200':
          $ref: '#/components/responses/multiple_posts'

    post:
      summary: Create post
      description: Create post
      operationId: app.views.create_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_post'
      responses:
        '201':
          $ref: '#/components/responses/single_post'

  /posts/{post_id}/like:
    get:
      summary: Like post
      description: Like post
      operationId: app.views.like_post
      parameters:
        - $ref: '#/components/parameters/post_id'
      responses:
        '201':
           description: Empty

  /posts/{post_id}/unlike:
    get:
      summary: Unlike post
      description: Unlike post
      operationId: app.views.unlike_post
      parameters:
        - $ref: '#/components/parameters/post_id'
      responses:
        '200':
          description: Empty
  /requestlog/{user_id}:
    get:
      summary: Get user log
      description: Like post
      operationId: app.views.requestlog
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: Empty
  /signup:
    post:
      summary: User signup
      description: User signup
      operationId: app.views.user_signup
      responses:
        '200':
          $ref: '#/components/responses/access_token_response'
        '400':
          description: Error
  /login:
    post:
      summary: User login
      description: User login
      operationId: app.views.login
      responses:
        '200':
          $ref: '#/components/responses/access_token_response'
        '400':
          description: Error
        '401':
          description: Error

components:
  parameters:
    date_from:
      in: query
      name: date_from
      schema:
        type: string
        format: date
        default: '1900-01-01'
    date_to:
      in: query
      name: date_to
      schema:
        type: string
        format: date
        default: '2090-01-01'
    post_id:
      in: path
      name: post_id
      required: true
      schema:
        type: integer
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: integer

  requestBodies:
    user_signup:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user_signup'
    create_post_request:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/create_post'

  responses:
    single_post:
      description: single post
      content:
        application/json:
          schema:
            $ref : '#/components/schemas/single_post'
    multiple_posts:
      description: single post
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/single_post'

    access_token_response:
      description: access token response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/access_token'

    user:
      description: single user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'

  schemas:
    access_token:
      properties:
        access_token:
          type: string
    single_post:
      properties:
        id:
          type: integer
        body:
          type: string
        timestamp:
          type: string
          format: date-time
        user_id:
          type: integer
    create_post:
      properties:
        body:
          type: string

    user:
      properties:
        id:
          type: integer
        username:
          type: string
        hash:
          type: text
    user_signup:
      properties:
        username:
          type: string
        password:
          type: text
      required:
        - username
        - password
